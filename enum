// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity >= 0.5.0 < 0.9.0;

//enum: 사용자/개발자에의해 정의된 상수세트 타입(uint8 = 0~255)

contract lec30{
    enum CarStatus{
        TurnOff,
        TurnOn,
        Driving,
        Stop
    }

    CarStatus public carStatus;

    constructor(){
        carStatus = CarStatus.TurnOff;
    }

    event carCurrentStatus(CarStatus _carStatus, uint256 _carStatusInInt);

    function turnOnCar() public {
        require(carStatus == CarStatus.TurnOff, "Your car must be turned off");
        carStatus = CarStatus.TurnOn;
        emit carCurrentStatus(carStatus, uint256(carStatus));
    }

    function DrivingCar() public {
        require(carStatus == CarStatus.TurnOn, "Your car must be turned on");
        carStatus = CarStatus.Driving;
        emit carCurrentStatus(carStatus, uint256(carStatus));
    }

    function StopCar() public {
        require(carStatus == CarStatus.Driving, "Your car must be turned on");
        carStatus = CarStatus.Stop;
        emit carCurrentStatus(carStatus, uint256(carStatus));
    }

    function turnOffCar() public {
        require(carStatus == CarStatus.TurnOn || carStatus == CarStatus.Stop, "Your car must be turned on or driving");
        carStatus = CarStatus.TurnOff;
        emit carCurrentStatus(carStatus, uint256(carStatus));
    }

    function CheckStatus() public view returns(CarStatus){
        return carStatus;
    }
}
