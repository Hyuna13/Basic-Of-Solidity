// SPDX-License-Identifier: MIT
pragma solidity >= 0.5.0 <0.9.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract Coin is ERC20 {
  address public minter;
  mapping(address => uint256) public balances;

  event Sent(address from, address to, uint amount);

  constructor() ERC20("T20", "T20") {
    minter = msg.sender;
  }

  function mint(address receiver, uint256 amount) public {
    //require(msg.sender == minter);
    //require(amount < 1e16);
    //balances[receiver] += amount;
    _mint(receiver, amount);
  }

  function send(address receiver, uint256 amount) public {
    //require(amount <= balances[msg.sender], "Insufficient");
    //balances[msg.sender] -= amount;
    //balances[receiver] += amount;
    _transfer(msg.sender, receiver, amount);
    emit Sent(msg.sender, receiver, amount);
  }
}
