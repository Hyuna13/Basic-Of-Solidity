// SPDX-License-Identifier: GPL-3.0-or-later
pragma solidity >= 0.5.0 < 0.9.0;

//import
//다른 파일에 있다고 가정

//lec33
library SafeMath0{
    function add(uint8 a, uint8 b) internal pure reutnrs(uint8) {
        require(a+b >= a, "SafeMath0: addtion overflow");
        return a + b;
    }
}

contract HiSolidity {
    event Hi(string _str);

    function hi() public {
        emit Hi("Hello Solidity");
    }
}

---------------------------------

//lec34
import "./lec33.sol";
contract lec34 is HiSolidity {
    using SafeMath0 for uint8;
    uint8 public a;
    function becomeOverFlow(uint8 _num1, uint8 _num2) {
        a = _num1.add(_num2);
    }
}

//외부 라이브러리
import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol";

contract lec34 is HiSolidity {
    using SafeMath0 for uint256;
    uint256 public a;
    uint256 maximun = 2**256 - 1;
    function becomeOverFlow(uint256 _num1, uint256 _num2) {
        a = _num1.add(_num2);
    }
}
